//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Supermarket.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class SupermarketEntities : DbContext
    {
        public SupermarketEntities()
            : base("name=SupermarketEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Category> Category { get; set; }
        public virtual DbSet<Country> Country { get; set; }
        public virtual DbSet<MarketUser> MarketUser { get; set; }
        public virtual DbSet<Producer> Producer { get; set; }
        public virtual DbSet<Product> Product { get; set; }
        public virtual DbSet<Receipt> Receipt { get; set; }
        public virtual DbSet<ReceiptItem> ReceiptItem { get; set; }
        public virtual DbSet<Stock> Stock { get; set; }
        public virtual DbSet<UserType> UserType { get; set; }
    
        public virtual int AddCashier(string name, string password_hash)
        {
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            var password_hashParameter = password_hash != null ?
                new ObjectParameter("password_hash", password_hash) :
                new ObjectParameter("password_hash", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AddCashier", nameParameter, password_hashParameter);
        }
    
        public virtual int AddCategory(string name)
        {
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AddCategory", nameParameter);
        }
    
        public virtual int AddProducer(Nullable<int> id_country, string name)
        {
            var id_countryParameter = id_country.HasValue ?
                new ObjectParameter("id_country", id_country) :
                new ObjectParameter("id_country", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AddProducer", id_countryParameter, nameParameter);
        }
    
        public virtual int AddProduct(Nullable<int> id_producer, Nullable<int> id_category, string name, string barcode)
        {
            var id_producerParameter = id_producer.HasValue ?
                new ObjectParameter("id_producer", id_producer) :
                new ObjectParameter("id_producer", typeof(int));
    
            var id_categoryParameter = id_category.HasValue ?
                new ObjectParameter("id_category", id_category) :
                new ObjectParameter("id_category", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            var barcodeParameter = barcode != null ?
                new ObjectParameter("barcode", barcode) :
                new ObjectParameter("barcode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AddProduct", id_producerParameter, id_categoryParameter, nameParameter, barcodeParameter);
        }
    
        public virtual int AddReceipt(Nullable<int> id_cashier, Nullable<decimal> total_price)
        {
            var id_cashierParameter = id_cashier.HasValue ?
                new ObjectParameter("id_cashier", id_cashier) :
                new ObjectParameter("id_cashier", typeof(int));
    
            var total_priceParameter = total_price.HasValue ?
                new ObjectParameter("total_price", total_price) :
                new ObjectParameter("total_price", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AddReceipt", id_cashierParameter, total_priceParameter);
        }
    
        public virtual int AddReceiptItem(Nullable<int> id, Nullable<int> id_product, Nullable<int> quantity, Nullable<decimal> total_price)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var id_productParameter = id_product.HasValue ?
                new ObjectParameter("id_product", id_product) :
                new ObjectParameter("id_product", typeof(int));
    
            var quantityParameter = quantity.HasValue ?
                new ObjectParameter("quantity", quantity) :
                new ObjectParameter("quantity", typeof(int));
    
            var total_priceParameter = total_price.HasValue ?
                new ObjectParameter("total_price", total_price) :
                new ObjectParameter("total_price", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AddReceiptItem", idParameter, id_productParameter, quantityParameter, total_priceParameter);
        }
    
        public virtual int AddStock(Nullable<int> id_product, Nullable<int> quantity, Nullable<System.DateTime> supply_date, Nullable<System.DateTime> expiration_date, Nullable<decimal> purchase_price)
        {
            var id_productParameter = id_product.HasValue ?
                new ObjectParameter("id_product", id_product) :
                new ObjectParameter("id_product", typeof(int));
    
            var quantityParameter = quantity.HasValue ?
                new ObjectParameter("quantity", quantity) :
                new ObjectParameter("quantity", typeof(int));
    
            var supply_dateParameter = supply_date.HasValue ?
                new ObjectParameter("supply_date", supply_date) :
                new ObjectParameter("supply_date", typeof(System.DateTime));
    
            var expiration_dateParameter = expiration_date.HasValue ?
                new ObjectParameter("expiration_date", expiration_date) :
                new ObjectParameter("expiration_date", typeof(System.DateTime));
    
            var purchase_priceParameter = purchase_price.HasValue ?
                new ObjectParameter("purchase_price", purchase_price) :
                new ObjectParameter("purchase_price", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AddStock", id_productParameter, quantityParameter, supply_dateParameter, expiration_dateParameter, purchase_priceParameter);
        }
    
        public virtual int DeactivateStock(Nullable<int> quantity)
        {
            var quantityParameter = quantity.HasValue ?
                new ObjectParameter("quantity", quantity) :
                new ObjectParameter("quantity", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeactivateStock", quantityParameter);
        }
    
        public virtual int DecreaseQuantity(Nullable<int> id_stock)
        {
            var id_stockParameter = id_stock.HasValue ?
                new ObjectParameter("id_stock", id_stock) :
                new ObjectParameter("id_stock", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DecreaseQuantity", id_stockParameter);
        }
    
        public virtual int DeleteCashier(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteCashier", idParameter);
        }
    
        public virtual int DeleteCategory(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteCategory", idParameter);
        }
    
        public virtual int DeleteProducer(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteProducer", idParameter);
        }
    
        public virtual int DeleteProduct(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteProduct", idParameter);
        }
    
        public virtual int DeleteStock(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteStock", idParameter);
        }
    
        public virtual int EditCashierName(Nullable<int> id, string name)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("EditCashierName", idParameter, nameParameter);
        }
    
        public virtual int EditCashierPassword(Nullable<int> id, string password_hash)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var password_hashParameter = password_hash != null ?
                new ObjectParameter("password_hash", password_hash) :
                new ObjectParameter("password_hash", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("EditCashierPassword", idParameter, password_hashParameter);
        }
    
        public virtual int EditCategoryName(Nullable<int> id, string name)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("EditCategoryName", idParameter, nameParameter);
        }
    
        public virtual int EditProducerName(Nullable<int> id, string name)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("EditProducerName", idParameter, nameParameter);
        }
    
        public virtual int EditProduct(Nullable<int> id, Nullable<int> id_category, Nullable<int> id_producer, string name, string barcode)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var id_categoryParameter = id_category.HasValue ?
                new ObjectParameter("id_category", id_category) :
                new ObjectParameter("id_category", typeof(int));
    
            var id_producerParameter = id_producer.HasValue ?
                new ObjectParameter("id_producer", id_producer) :
                new ObjectParameter("id_producer", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            var barcodeParameter = barcode != null ?
                new ObjectParameter("barcode", barcode) :
                new ObjectParameter("barcode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("EditProduct", idParameter, id_categoryParameter, id_producerParameter, nameParameter, barcodeParameter);
        }
    
        public virtual int EditStock(Nullable<int> id, Nullable<int> id_product, Nullable<int> quantity, Nullable<System.DateTime> supply_date, Nullable<System.DateTime> expiration_date, Nullable<decimal> selling_price)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var id_productParameter = id_product.HasValue ?
                new ObjectParameter("id_product", id_product) :
                new ObjectParameter("id_product", typeof(int));
    
            var quantityParameter = quantity.HasValue ?
                new ObjectParameter("quantity", quantity) :
                new ObjectParameter("quantity", typeof(int));
    
            var supply_dateParameter = supply_date.HasValue ?
                new ObjectParameter("supply_date", supply_date) :
                new ObjectParameter("supply_date", typeof(System.DateTime));
    
            var expiration_dateParameter = expiration_date.HasValue ?
                new ObjectParameter("expiration_date", expiration_date) :
                new ObjectParameter("expiration_date", typeof(System.DateTime));
    
            var selling_priceParameter = selling_price.HasValue ?
                new ObjectParameter("selling_price", selling_price) :
                new ObjectParameter("selling_price", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("EditStock", idParameter, id_productParameter, quantityParameter, supply_dateParameter, expiration_dateParameter, selling_priceParameter);
        }
    
        public virtual ObjectResult<string> GetActiveBarcodes()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("GetActiveBarcodes");
        }
    
        public virtual ObjectResult<string> GetActiveCashiers()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("GetActiveCashiers");
        }
    
        public virtual ObjectResult<Nullable<int>> GetActiveCashiersIds()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("GetActiveCashiersIds");
        }
    
        public virtual ObjectResult<string> GetActiveCategories()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("GetActiveCategories");
        }
    
        public virtual ObjectResult<Nullable<int>> GetActiveCategoriesIds()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("GetActiveCategoriesIds");
        }
    
        public virtual ObjectResult<Nullable<int>> GetActiveCountryIds()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("GetActiveCountryIds");
        }
    
        public virtual ObjectResult<string> GetActiveProducers()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("GetActiveProducers");
        }
    
        public virtual ObjectResult<Nullable<int>> GetActiveProducersIds()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("GetActiveProducersIds");
        }
    
        public virtual ObjectResult<string> GetActiveProducts()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("GetActiveProducts");
        }
    
        public virtual ObjectResult<Nullable<int>> GetActiveProductsIds()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("GetActiveProductsIds");
        }
    
        public virtual ObjectResult<Nullable<int>> GetActiveStocksIds()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("GetActiveStocksIds");
        }
    
        public virtual ObjectResult<string> GetActiveStocksProductsBarcodes()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("GetActiveStocksProductsBarcodes");
        }
    
        public virtual ObjectResult<Nullable<int>> GetCashierByName(string name)
        {
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("GetCashierByName", nameParameter);
        }
    
        public virtual ObjectResult<GetCashiers_Result> GetCashiers()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetCashiers_Result>("GetCashiers");
        }
    
        public virtual ObjectResult<GetCashierSumsInEveryMonth_Result> GetCashierSumsInEveryMonth(string name, Nullable<int> month)
        {
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            var monthParameter = month.HasValue ?
                new ObjectParameter("month", month) :
                new ObjectParameter("month", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetCashierSumsInEveryMonth_Result>("GetCashierSumsInEveryMonth", nameParameter, monthParameter);
        }
    
        public virtual ObjectResult<GetCategories_Result> GetCategories()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetCategories_Result>("GetCategories");
        }
    
        public virtual ObjectResult<Nullable<int>> GetLastReceiptId()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("GetLastReceiptId");
        }
    
        public virtual ObjectResult<string> GetMarketUsers()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("GetMarketUsers");
        }
    
        public virtual ObjectResult<string> GetMarketUsersPasswords()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("GetMarketUsersPasswords");
        }
    
        public virtual ObjectResult<GetProducers_Result> GetProducers()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetProducers_Result>("GetProducers");
        }
    
        public virtual ObjectResult<GetProducersProductsCategories_Result> GetProducersProductsCategories(string producer_name)
        {
            var producer_nameParameter = producer_name != null ?
                new ObjectParameter("producer_name", producer_name) :
                new ObjectParameter("producer_name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetProducersProductsCategories_Result>("GetProducersProductsCategories", producer_nameParameter);
        }
    
        public virtual ObjectResult<GetProductByBarcode_Result> GetProductByBarcode(string barcode)
        {
            var barcodeParameter = barcode != null ?
                new ObjectParameter("barcode", barcode) :
                new ObjectParameter("barcode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetProductByBarcode_Result>("GetProductByBarcode", barcodeParameter);
        }
    
        public virtual ObjectResult<GetProductByCategory_Result> GetProductByCategory(string category_name)
        {
            var category_nameParameter = category_name != null ?
                new ObjectParameter("category_name", category_name) :
                new ObjectParameter("category_name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetProductByCategory_Result>("GetProductByCategory", category_nameParameter);
        }
    
        public virtual ObjectResult<GetProductByExpirationDate_Result> GetProductByExpirationDate(Nullable<System.DateTime> date)
        {
            var dateParameter = date.HasValue ?
                new ObjectParameter("date", date) :
                new ObjectParameter("date", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetProductByExpirationDate_Result>("GetProductByExpirationDate", dateParameter);
        }
    
        public virtual ObjectResult<GetProductByName_Result> GetProductByName(string name)
        {
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetProductByName_Result>("GetProductByName", nameParameter);
        }
    
        public virtual ObjectResult<GetProductByProducer_Result> GetProductByProducer(string producer_name)
        {
            var producer_nameParameter = producer_name != null ?
                new ObjectParameter("producer_name", producer_name) :
                new ObjectParameter("producer_name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetProductByProducer_Result>("GetProductByProducer", producer_nameParameter);
        }
    
        public virtual ObjectResult<GetProducts_Result> GetProducts()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetProducts_Result>("GetProducts");
        }
    
        public virtual ObjectResult<Nullable<int>> GetQuantity(Nullable<int> productId)
        {
            var productIdParameter = productId.HasValue ?
                new ObjectParameter("productId", productId) :
                new ObjectParameter("productId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("GetQuantity", productIdParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> GetStockId(Nullable<int> id_product)
        {
            var id_productParameter = id_product.HasValue ?
                new ObjectParameter("id_product", id_product) :
                new ObjectParameter("id_product", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("GetStockId", id_productParameter);
        }
    
        public virtual ObjectResult<GetStockProductByBarcode_Result> GetStockProductByBarcode(string barcode)
        {
            var barcodeParameter = barcode != null ?
                new ObjectParameter("barcode", barcode) :
                new ObjectParameter("barcode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetStockProductByBarcode_Result>("GetStockProductByBarcode", barcodeParameter);
        }
    
        public virtual ObjectResult<Nullable<decimal>> GetStockPurchasePrice(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("GetStockPurchasePrice", idParameter);
        }
    
        public virtual ObjectResult<GetStocks_Result> GetStocks()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetStocks_Result>("GetStocks");
        }
    
        public virtual ObjectResult<Nullable<decimal>> GetSumByCategory(string category_name)
        {
            var category_nameParameter = category_name != null ?
                new ObjectParameter("category_name", category_name) :
                new ObjectParameter("category_name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("GetSumByCategory", category_nameParameter);
        }
    
        public virtual ObjectResult<GetTheBiggestReceipt_Result> GetTheBiggestReceipt(Nullable<System.DateTime> date)
        {
            var dateParameter = date.HasValue ?
                new ObjectParameter("date", date) :
                new ObjectParameter("date", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetTheBiggestReceipt_Result>("GetTheBiggestReceipt", dateParameter);
        }
    
        public virtual int UpdateStock()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateStock");
        }
    }
}
